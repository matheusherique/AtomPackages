{
  "_args": [
    [
      {
        "raw": "/tmp/d-116107-15330-1cre3na/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/tmp/d-116107-15330-1cre3na/package.tgz",
        "spec": "/tmp/d-116107-15330-1cre3na/package.tgz",
        "type": "local"
      },
      "/tmp/apm-install-dir-116107-15330-2174w4"
    ]
  ],
  "_from": "../d-116107-15330-1cre3na/package.tgz",
  "_id": "latex@0.39.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/latex",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/tmp/d-116107-15330-1cre3na/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/tmp/d-116107-15330-1cre3na/package.tgz",
    "spec": "/tmp/d-116107-15330-1cre3na/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-116107-15330-1cre3na/package.tgz",
  "_shasum": "22eaee85b8083bbea4193fd89803b8ddc99ec503",
  "_shrinkwrap": null,
  "_spec": "/tmp/d-116107-15330-1cre3na/package.tgz",
  "_where": "/tmp/apm-install-dir-116107-15330-2174w4",
  "activationCommands": {
    "atom-workspace": [
      "latex:build",
      "latex:check-runtime",
      "latex:clean",
      "latex:rebuild",
      "latex:sync",
      "latex:sync-log"
    ]
  },
  "activationHooks": [
    "language-latex:grammar-used",
    "language-tex:grammar-used",
    "language-latexsimple:grammar-used"
  ],
  "bugs": {
    "url": "https://github.com/thomasjo/atom-latex/issues"
  },
  "configSchema": {
    "texPath": {
      "title": "TeX Path",
      "description": "The full path to your TeX distribution's bin directory. Supports `$PATH` substitution.",
      "type": "string",
      "default": "",
      "order": 1
    },
    "builder": {
      "description": "Select LaTeX builder. MiKTeX distribution is required for texify.",
      "type": "string",
      "enum": [
        "latexmk",
        "texify"
      ],
      "default": "latexmk",
      "order": 2
    },
    "engine": {
      "description": "Select standard LaTeX engine",
      "type": "string",
      "enum": [
        "pdflatex",
        "lualatex",
        "platex",
        "uplatex",
        "xelatex"
      ],
      "default": "pdflatex",
      "order": 3
    },
    "customEngine": {
      "description": "Enter command for custom LaTeX engine. Overrides Engine.",
      "type": "string",
      "default": "",
      "order": 4
    },
    "enableShellEscape": {
      "type": "boolean",
      "default": false,
      "order": 5
    },
    "enableSynctex": {
      "title": "Enable SyncTeX",
      "type": "boolean",
      "default": true,
      "order": 6
    },
    "enableExtendedBuildMode": {
      "description": "Enable extended build mode using `latexmk` rules for custom files types. Currently includes support for Asymptote, the `glossaries` package, the `index` package, MetaPost, the `nomencl` package and SageTeX. Please note that these rules are loaded after all other `latexmkrc` files are loaded, and therefore may overwrite custom rules defined by the user.",
      "type": "boolean",
      "default": true,
      "order": 7
    },
    "loggingLevel": {
      "description": "The minimum level of message severity to output in the logger. A logging level of `error` shows only messages indicating catastrophic issues such as undefined symbols, `warning` shows error messages and messages indicating unintended consequences such as bad boxes, and `info` shows all messages including purely informational messages such a font loading.",
      "type": "string",
      "enum": [
        "error",
        "warning",
        "info"
      ],
      "default": "warning",
      "order": 8
    },
    "cleanPatterns": {
      "description": "The files and directories to remove during a LaTeX clean. Basic glob patterns are understood and named properties such as {jobname} are replaced with the current build properties. Patterns that start with `/` or `\\` are matched against any file in the same directory as the source file. All other patterns are matched against generated files in the output directory. More information can be found on the Atom LaTeX wiki.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "**/*.aux",
        "**/*.aux.bak",
        "**/*.bbl",
        "**/*.bcf",
        "**/*.blg",
        "**/*.dvi",
        "**/*.fdb_latexmk",
        "**/*.fls",
        "**/*.idx",
        "**/*.idx.bak",
        "**/*.ilg",
        "**/*.ind",
        "**/*.lof",
        "**/*.log",
        "**/*.lol",
        "**/*.lot",
        "**/*.nav",
        "**/*.out",
        "**/*.pdf",
        "**/*.ps",
        "**/*.snm",
        "**/*.synctex.gz",
        "**/*.toc",
        "/**/_minted-{jobname}",
        "/{output_dir}/sage-plots-for-{jobname}.tex",
        "/missfont.log",
        "/texput.log",
        "/texput.aux"
      ],
      "order": 9
    },
    "outputDirectory": {
      "description": "All files generated during a build will be redirected here. Leave blank if you want the build output to be stored in the same directory as the TeX document.",
      "type": "string",
      "default": "",
      "order": 10
    },
    "outputFormat": {
      "description": "Output file format. DVI and PS currently only supported for latexmk.",
      "type": "string",
      "enum": [
        "pdf",
        "dvi",
        "ps"
      ],
      "default": "pdf",
      "order": 11
    },
    "producer": {
      "title": "PDF Producer",
      "description": "Program to use when post-processing DVI output in order to produce PDF. This is only used for LaTeX engines not capable of natively producing PDF. Currently only supported for latexmk.",
      "type": "string",
      "enum": [
        "dvipdfmx",
        "xdvipdfmx",
        "dvipdf",
        "ps2pdf"
      ],
      "default": "dvipdfmx",
      "order": 12
    },
    "moveResultToSourceDirectory": {
      "title": "Move Result to Source Directory",
      "description": "Ensures that the output file produced by a successful build is stored together with the TeX document that produced it.",
      "type": "boolean",
      "default": true,
      "order": 13
    },
    "buildOnSave": {
      "title": "Build on Save",
      "description": "Automatically run builds when files are saved.",
      "type": "boolean",
      "default": false,
      "order": 14
    },
    "openResultAfterBuild": {
      "title": "Open Result after Successful Build",
      "type": "boolean",
      "default": true,
      "order": 15
    },
    "openResultInBackground": {
      "title": "Open Result in Background",
      "type": "boolean",
      "default": true,
      "order": 16
    },
    "opener": {
      "type": "string",
      "enum": [
        "automatic",
        "evince",
        "okular",
        "pdf-view",
        "preview",
        "skim",
        "sumatra",
        "xdg-open",
        "custom"
      ],
      "default": "automatic",
      "order": 17
    },
    "skimPath": {
      "description": "Full application path to Skim (macOS).",
      "type": "string",
      "default": "/Applications/Skim.app",
      "order": 18
    },
    "sumatraPath": {
      "title": "SumatraPDF Path",
      "description": "Full application path to SumatraPDF (Windows).",
      "type": "string",
      "default": "C:\\Program Files (x86)\\SumatraPDF\\SumatraPDF.exe",
      "order": 19
    },
    "okularPath": {
      "description": "Full application path to Okular (*nix).",
      "type": "string",
      "default": "/usr/bin/okular",
      "order": 20
    },
    "viewerPath": {
      "title": "Custom PDF Viewer Path",
      "description": "Full application path to your PDF viewer. Overrides Skim and SumatraPDF options.",
      "type": "string",
      "default": "",
      "order": 21
    },
    "useMasterFileSearch": {
      "description": "Enables naive search for master/root file when building distributed documents. Note that this does not affect the equivalent *Magic Comments* functionality.",
      "type": "boolean",
      "default": false,
      "order": 22
    }
  },
  "consumedServices": {
    "status-bar": {
      "versions": {
        "^1.0.0": "consumeStatusBar"
      }
    }
  },
  "dependencies": {
    "dbus-native": "^0.2.0",
    "etch": "0.7.1",
    "fs-plus": "^2.9.1",
    "glob": "^7.1.1",
    "lodash": "^4.13.1",
    "minimatch": "^3.0.3",
    "temp": "^0.8.3",
    "tree-kill": "^1.1.0",
    "wrench": "^1.5.9"
  },
  "description": "Compile LaTeX documents from within Atom.",
  "devDependencies": {
    "babel-eslint": "^7.0.0",
    "snazzy": "^5.0.0",
    "standard": "^8.0.0"
  },
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "homepage": "https://github.com/thomasjo/atom-latex#readme",
  "keywords": [
    "tex",
    "latex",
    "latexmk",
    "texlive",
    "miktex"
  ],
  "license": "MIT",
  "main": "./lib/main",
  "name": "latex",
  "optionalDependencies": {},
  "readme": "# LaTeX package\n[![Build Status][travis svg]][travis]\n[![Windows Build Status][appveyor svg]][appveyor]\n[![Dependency Status][dependency svg]][dependency]\n[![devDependency Status][devDependency svg]][devDependency]\n\nCompile LaTeX or [knitr] documents from within Atom.\n\n## Installing\nUse the Atom package manager and search for \"latex\", or run `apm install latex`\nfrom the command line.\n\n## Prerequisites\n### TeX distribution\nSince this package relies upon `latexmk`, a reasonably up-to-date and working\nTeX distribution is required. The only officially supported distributions are\n[TeX Live], and [MiKTeX]. Although, the latter is not as well tested and\nsupported as TeX Live, hence using TeX Live is highly recommended.\n\nYou need to ensure that the package can find your TeX distribution's binaries;\nby default the package uses your `PATH` environment variable, as well as the\nfollowing search paths on Linux and macOS\n\n1. `/usr/texbin`\n2. `/Library/TeX/texbin`\n\nand on Windows it uses\n\n1. `%SystemDrive%\\texlive\\2016\\bin\\win32`\n2. `%SystemDrive%\\texlive\\2015\\bin\\win32`\n3. `%SystemDrive%\\texlive\\2014\\bin\\win32`\n4. `%ProgramFiles%\\MiKTeX 2.9\\miktex\\bin\\x64`\n5. `%ProgramFiles(x86)%\\MiKTeX 2.9\\miktex\\bin`\n\nIf your TeX distribution's binaries are not installed in one of those locations\nor discoverable via the `PATH` environment variable, you will need to help the\npackage find the binaries. This can be done by setting the *TeX Path*\nconfiguration option to point to the folder containing the binaries, either in\nthe settings view, or directly in your `config.cson` file. See [Configuration]\nfor further details regarding the settings of this package.\n\n#### TeX Live\nIf you're using TeX Live and have installed to the default location then no\nfurther action should be required.\n\n#### MiKTeX\nIf you're using MikTeX and have not installed the required `latexmk` package,\nlearn how to [use `latexmk` with MiKTeX][latexmk with MiKTeX].\n\n## Usage\nThe `latex:build` command can be invoked from the LaTex menu or by pressing the\ndefault keybind <kbd>ctrl</kbd>-<kbd>alt</kbd>-<kbd>b</kbd> while in a LaTex or\nknitr file. Log messages and any other messages from the build may be seen in\nthe LaTeX log panel accessible from the status bar.\n\nThe `latex` package supports other commands as detailed in the table below.\n\n| Command          | Keybinding                                  | Use                                                                      |\n|:-----------------|:-------------------------------------------:|:-------------------------------------------------------------------------|\n| `latex:build`    | <kbd>ctrl</kbd>-<kbd>alt</kbd>-<kbd>b</kbd> | Build LaTeX/knitr file and open result.                                  |\n| `latex:rebuild`  | None                                        | Force a rebuild of LaTeX/knitr file.                                     |\n| `latex:clean`    | <kbd>ctrl</kbd>-<kbd>alt</kbd>-<kbd>c</kbd> | Cleanup files after a build.                                             |\n| `latex:kill`     | None                                        | Terminate currently running build. Also available from status indicator. |\n| `latex:sync`     | <kbd>ctrl</kbd>-<kbd>alt</kbd>-<kbd>s</kbd> | Use SyncTeX forward if possible from the current cursor position.        |\n| `latex:sync-log` | None                                        | Display and highlight log messages from the current cursor position.     |\n\n### Magic comments\nThis package has support for various \"magic\" TeX comments in the form of\n`% !TEX <name> = <value>` as detailed in the table below.\n\n| Name               | Value                                         | Use                                               |\n|:-------------------|:----------------------------------------------|:--------------------------------------------------|\n| `format`           | `dvi`, `ps` or `pdf`                          | Override the output format                        |\n| `jobnames`         | space separated names, e.g. `foo bar`         | Control the number and names of build jobs.       |\n| `output_directory` | directory path, e.g. `build`                  | Specify the output directory that should be used. |\n| `producer`         | `dvipdf`, `dvipdfmx`, `xdvipdfmx` or `ps2pdf` | Override the PDF producer                         |\n| `program`          | `pdflatex`, `lualatex`, etc.                  | Override the LaTeX engine to use for build.       |\n| `root`             | file path, e.g. `../file.tex`                 | Specify the root file that should be built.       |\n\n### PDF/DVI/PS Viewers\nThe `latex` package currently supports [Evince], [Okular], [pdf-view],\n[Preview], [Skim], [Sumatra PDF] and [xdg-open] as PDF/DVI/PS viewers. This\nincludes support for cursor synchronization via SyncTeX if possible. Specific\nfeatures of each of the viewers is detailed at [Supported Viewers].\n\n## Development status\nPlease note that this package is in a **beta** state. It is stable, but lacks\nsome important features.\n\nAny and all help is greatly appreciated!\n\n<!--refs-->\n[appveyor svg]: https://ci.appveyor.com/api/projects/status/oc2v06stfwgd3bkn/branch/master?svg=true\n[appveyor]: https://ci.appveyor.com/project/thomasjo/atom-latex/branch/master\n[Configuration]: https://github.com/thomasjo/atom-latex/wiki/Configuration\n[dependency svg]: https://david-dm.org/thomasjo/atom-latex.svg\n[dependency]: https://david-dm.org/thomasjo/atom-latex\n[devDependency svg]: https://david-dm.org/thomasjo/atom-latex/dev-status.svg\n[devDependency]: https://david-dm.org/thomasjo/atom-latex?type=dev\n[Evince]: https://wiki.gnome.org/Apps/Evince\n[knitr]: http://yihui.name/knitr/\n[latexmk with MiKTeX]: https://github.com/thomasjo/atom-latex/wiki/Using-latexmk-with-MiKTeX\n[MiKTeX]: http://miktex.org/\n[Okular]: https://okular.kde.org/\n[pdf-view]: https://atom.io/packages/pdf-view\n[Preview]: https://support.apple.com/en-us/HT201740\n[Skim]: http://skim-app.sourceforge.net/\n[Sumatra PDF]: http://www.sumatrapdfreader.org/free-pdf-reader.html\n[Supported Viewers]: https://github.com/thomasjo/atom-latex/wiki/Supported-Viewers\n[TeX Live]: https://www.tug.org/texlive/\n[travis svg]: https://travis-ci.org/thomasjo/atom-latex.svg?branch=master\n[travis]: https://travis-ci.org/thomasjo/atom-latex\n[xdg-open]: https://linux.die.net/man/1/xdg-open\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/thomasjo/atom-latex.git"
  },
  "standard": {
    "parser": "babel-eslint",
    "globals": [
      "atom",
      "latex",
      "afterEach",
      "beforeEach",
      "describe",
      "expect",
      "it",
      "jasmine",
      "runs",
      "spyOn",
      "waitsFor",
      "waitsForPromise"
    ]
  },
  "version": "0.39.1"
}
